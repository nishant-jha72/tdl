{"ast":null,"code":"var _jsxFileName = \"/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/tasks\");\n      const data = await response.json();\n      setTasks(data);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const addTask = newTask => {\n    setTasks(prev => [...prev, newTask]);\n  };\n\n  // üîπ Modified toggleComplete function\n  const toggleComplete = async (id, currentStatus) => {\n    try {\n      let description = \"N/A\";\n\n      // Ask only when marking as completed\n      if (!currentStatus) {\n        description = prompt(\"Add a description for this completed task:\", \"\");\n        if (!description || description.trim() === \"\") description = \"N/A\";\n      }\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          completed: !currentStatus,\n          description\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to update task\");\n      const updatedTask = await response.json();\n      setTasks(prev => prev.map(task => task._id === id ? updatedTask : task));\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Failed to delete task\");\n      setTasks(prev => prev.filter(task => task._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  const workTodo = tasks.filter(task => !task.completed);\n  const workDone = tasks.filter(task => task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCDD My Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u23F3 Due Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: workTodo,\n          toggleComplete: toggleComplete,\n          deleteTask: deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section completed-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2705 Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: workDone,\n          toggleComplete: toggleComplete,\n          deleteTask: deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AddTaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","response","fetch","data","json","err","console","error","addTask","newTask","prev","toggleComplete","id","currentStatus","description","prompt","trim","method","headers","body","JSON","stringify","completed","ok","Error","updatedTask","map","task","_id","deleteTask","filter","workTodo","workDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/tasks\");\n      const data = await response.json();\n      setTasks(data);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const addTask = (newTask) => {\n    setTasks((prev) => [...prev, newTask]);\n  };\n\n  // üîπ Modified toggleComplete function\n  const toggleComplete = async (id, currentStatus) => {\n    try {\n      let description = \"N/A\";\n\n      // Ask only when marking as completed\n      if (!currentStatus) {\n        description = prompt(\"Add a description for this completed task:\", \"\");\n        if (!description || description.trim() === \"\") description = \"N/A\";\n      }\n\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ completed: !currentStatus, description }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to update task\");\n\n      const updatedTask = await response.json();\n\n      setTasks((prev) =>\n        prev.map((task) => (task._id === id ? updatedTask : task))\n      );\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  const deleteTask = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"DELETE\",\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete task\");\n\n      setTasks((prev) => prev.filter((task) => task._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  const workTodo = tasks.filter((task) => !task.completed);\n  const workDone = tasks.filter((task) => task.completed);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">üìù My Task Manager</h1>\n      <AddTaskForm addTask={addTask} />\n\n      <div className=\"task-grid\">\n        <div className=\"task-section\">\n          <h2>‚è≥ Due Tasks</h2>\n          <TaskList\n            tasks={workTodo}\n            toggleComplete={toggleComplete}\n            deleteTask={deleteTask}\n          />\n        </div>\n\n        <div className=\"task-section completed-section\">\n          <h2>‚úÖ Completed Tasks</h2>\n          <TaskList\n            tasks={workDone}\n            toggleComplete={toggleComplete}\n            deleteTask={deleteTask}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}