{"ast":null,"code":"var _jsxFileName = \"/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport TaskList from \"./components/TaskList\";\n\n// ✅ API setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api/tasks\"\n});\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from backend\n  const fetchTasks = async () => {\n    try {\n      const res = await API.get(\"/\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n    }\n  };\n\n  // Add new task\n  const addTask = async task => {\n    try {\n      const res = await API.post(\"/\", task);\n      setTasks([...tasks, res.data]);\n    } catch (err) {\n      console.error(\"Error adding task:\", err);\n    }\n  };\n\n  // Mark task as done\n  const markDone = async id => {\n    try {\n      const res = await API.put(`/${id}`, {\n        status: \"done\"\n      });\n      setTasks(tasks.map(t => t._id === id ? res.data : t));\n    } catch (err) {\n      console.error(\"Error marking task done:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u2705 Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDone: markDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","AddTaskForm","TaskList","jsxDEV","_jsxDEV","API","create","baseURL","App","_s","tasks","setTasks","fetchTasks","res","get","data","err","console","error","addTask","task","post","markDone","id","put","status","map","t","_id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDone","_c","$RefreshReg$"],"sources":["/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport TaskList from \"./components/TaskList\";\n\n// ✅ API setup\nconst API = axios.create({ baseURL: \"http://localhost:5000/api/tasks\" });\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from backend\n  const fetchTasks = async () => {\n    try {\n      const res = await API.get(\"/\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n    }\n  };\n\n  // Add new task\n  const addTask = async (task) => {\n    try {\n      const res = await API.post(\"/\", task);\n      setTasks([...tasks, res.data]);\n    } catch (err) {\n      console.error(\"Error adding task:\", err);\n    }\n  };\n\n  // Mark task as done\n  const markDone = async (id) => {\n    try {\n      const res = await API.put(`/${id}`, { status: \"done\" });\n      setTasks(tasks.map(t => (t._id === id ? res.data : t)));\n    } catch (err) {\n      console.error(\"Error marking task done:\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>✅ Todo List</h1>\n      <AddTaskForm onAdd={addTask} />\n      <TaskList tasks={tasks} onDone={markDone} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAkC,CAAC,CAAC;AAExE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,GAAG,CAAC;MAC9BH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMG,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,IAAI;MACF,MAAMP,GAAG,GAAG,MAAMR,GAAG,CAACgB,IAAI,CAAC,GAAG,EAAED,IAAI,CAAC;MACrCT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,GAAG,CAACE,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAMM,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMV,GAAG,GAAG,MAAMR,GAAG,CAACmB,GAAG,CAAC,IAAID,EAAE,EAAE,EAAE;QAAEE,MAAM,EAAE;MAAO,CAAC,CAAC;MACvDd,QAAQ,CAACD,KAAK,CAACgB,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,EAAE,GAAGV,GAAG,CAACE,IAAI,GAAGY,CAAE,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOX,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1B3B,OAAA;MAAA2B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB/B,OAAA,CAACH,WAAW;MAACmC,KAAK,EAAEjB;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/B/B,OAAA,CAACF,QAAQ;MAACQ,KAAK,EAAEA,KAAM;MAAC2B,MAAM,EAAEf;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAC1B,EAAA,CA5CuBD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}