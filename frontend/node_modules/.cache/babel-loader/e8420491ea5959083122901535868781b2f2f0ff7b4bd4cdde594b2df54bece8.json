{"ast":null,"code":"var _jsxFileName = \"/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AddTaskForm from './components/AddTaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      const data = await response.json();\n      setTasks(data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const addTask = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n\n  // ✅ Update task completion in DB\n  const toggleComplete = async (id, currentStatus) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: !currentStatus\n        })\n      });\n      if (!response.ok) throw new Error('Failed to update task');\n      const updatedTask = await response.json();\n      setTasks(prevTasks => prevTasks.map(task => task._id === id ? updatedTask : task));\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // ✅ Delete task from DB\n  const deleteTask = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete task');\n      setTasks(prevTasks => prevTasks.filter(task => task._id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const workTodo = tasks.filter(task => !task.completed);\n  const workDone = tasks.filter(task => task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Work To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: workTodo,\n        toggleComplete: toggleComplete,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Work Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: workDone,\n        toggleComplete: toggleComplete,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AddTaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","response","fetch","data","json","err","console","error","addTask","newTask","prevTasks","toggleComplete","id","currentStatus","method","headers","body","JSON","stringify","completed","ok","Error","updatedTask","map","task","_id","deleteTask","filter","workTodo","workDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AddTaskForm from './components/AddTaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      const data = await response.json();\n      setTasks(data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const addTask = (newTask) => {\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n  };\n\n  // ✅ Update task completion in DB\n  const toggleComplete = async (id, currentStatus) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ completed: !currentStatus }),\n      });\n\n      if (!response.ok) throw new Error('Failed to update task');\n\n      const updatedTask = await response.json();\n\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task._id === id ? updatedTask : task\n        )\n      );\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // ✅ Delete task from DB\n  const deleteTask = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) throw new Error('Failed to delete task');\n\n      setTasks((prevTasks) => prevTasks.filter((task) => task._id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const workTodo = tasks.filter((task) => !task.completed);\n  const workDone = tasks.filter((task) => task.completed);\n\n  return (\n    <div className=\"container\">\n      <h1>My Task Manager</h1>\n      <AddTaskForm addTask={addTask} />\n\n      <div className=\"section\">\n        <h2>Work To Do</h2>\n        <TaskList\n          tasks={workTodo}\n          toggleComplete={toggleComplete}\n          deleteTask={deleteTask}\n        />\n      </div>\n\n      <div className=\"section\">\n        <h2>Work Done</h2>\n        <TaskList\n          tasks={workDone}\n          toggleComplete={toggleComplete}\n          deleteTask={deleteTask}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}