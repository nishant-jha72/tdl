{"ast":null,"code":"var _jsxFileName = \"/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AddTaskForm from './components/AddTaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/tasks').then(res => res.json()).then(data => setTasks(data)).catch(err => console.error(err));\n  }, []);\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n  const toggleComplete = id => {\n    const updatedTasks = tasks.map(task => task._id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task._id !== id));\n  };\n  const workTodo = tasks.filter(task => !task.completed);\n  const workDone = tasks.filter(task => task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Work To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: workTodo,\n        toggleComplete: toggleComplete,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Work Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: workDone,\n        toggleComplete: toggleComplete,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AddTaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","res","json","data","catch","err","console","error","addTask","task","toggleComplete","id","updatedTasks","map","_id","completed","deleteTask","filter","workTodo","workDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nishant-jha/todo-fullstack-filled/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AddTaskForm from './components/AddTaskForm';\nimport TaskList from './components/TaskList';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/tasks')\n      .then(res => res.json())\n      .then(data => setTasks(data))\n      .catch(err => console.error(err));\n  }, []);\n\n  const addTask = (task) => {\n    setTasks([...tasks, task]);\n  };\n\n  const toggleComplete = (id) => {\n    const updatedTasks = tasks.map(task => \n      task._id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task._id !== id));\n  };\n\n  const workTodo = tasks.filter(task => !task.completed);\n  const workDone = tasks.filter(task => task.completed);\n\n  return (\n    <div className=\"container\">\n      <h1>My Task Manager</h1>\n      \n      <AddTaskForm addTask={addTask} />\n\n      <div className=\"section\">\n        <h2>Work To Do</h2>\n        <TaskList \n          tasks={workTodo} \n          toggleComplete={toggleComplete} \n          deleteTask={deleteTask} \n        />\n      </div>\n\n      <div className=\"section\">\n        <h2>Work Done</h2>\n        <TaskList \n          tasks={workDone} \n          toggleComplete={toggleComplete} \n          deleteTask={deleteTask} \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}